---
- name: Deploy specific microservice from existing manifests
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    manifests_path: "../../microservices-demo/kubernetes-manifests"
    namespace: default
    service_name: "{{ target_service | default('frontend') }}"
    
  tasks:
    - name: Validate service name
      fail:
        msg: "Service name must be provided with -e target_service=<service_name>"
      when: target_service is not defined
      
    - name: Ensure namespace exists
      shell: kubectl create namespace {{ namespace }} --dry-run=client -o yaml | kubectl apply -f -
      ignore_errors: true
      
    - name: Check if manifest file exists
      stat:
        path: "{{ manifests_path }}/{{ service_name }}.yaml"
      register: manifest_file
      
    - name: Fail if manifest doesn't exist
      fail:
        msg: "Manifest file {{ manifests_path }}/{{ service_name }}.yaml not found"
      when: not manifest_file.stat.exists
      
    - name: Apply service manifest
      shell: kubectl apply -f "{{ manifests_path }}/{{ service_name }}.yaml" -n {{ namespace }}
      register: apply_result
      
    - name: Display apply result
      debug:
        msg: "{{ apply_result.stdout }}"
        
    - name: Wait for deployment to be ready
      shell: kubectl wait --for=condition=available --timeout=300s deployment/{{ service_name }} -n {{ namespace }}
      register: wait_result
      ignore_errors: true
      
    - name: Show service status
      shell: kubectl get deployment/{{ service_name }} service/{{ service_name }} -n {{ namespace }}
      register: status_output
      ignore_errors: true
      
    - name: Display service status
      debug:
        msg: "{{ status_output.stdout_lines }}"
      when: status_output.stdout_lines is defined
