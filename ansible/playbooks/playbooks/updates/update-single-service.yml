---
- name: Update Single Microservice
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    service_name: "{{ service_name | default('frontend') }}"
    new_version: "{{ new_version | default('v0.10.0') }}"
    namespace: "{{ namespace | default('default') }}"
    timeout: "{{ timeout | default('300s') }}"
    
  tasks:
    - name: Check if service exists
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
      register: service_check
      
    - name: Fail if service doesn't exist
      fail:
        msg: "Service {{ service_name }} not found"
      when: service_check.resources | length == 0
      
    - name: Get current service status
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
      register: current_status
      
    - name: Display current status
      debug:
        msg: "Current image: {{ current_status.resources[0].spec.template.spec.containers[0].image }}"
        
    - name: Update service image
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ service_name }}"
            namespace: "{{ namespace }}"
          spec:
            template:
              spec:
                containers:
                - name: server
                  image: "gcr.io/google-samples/microservices-demo/{{ service_name }}:{{ new_version }}"
                  
    - name: Wait for rollout to complete
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
        wait: true
        wait_condition:
          type: Progressing
          status: "True"
          reason: NewReplicaSetAvailable
        wait_timeout: "{{ timeout }}"
      register: rollout_result
      
    - name: Verify update success
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
      register: final_status
      
    - name: Display final status
      debug:
        msg: "Updated image: {{ final_status.resources[0].spec.template.spec.containers[0].image }}"
